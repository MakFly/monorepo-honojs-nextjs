name: CI â€” detect changes and build affected apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect:
    name: Detect changed apps
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.set.outputs.web }}
      auth: ${{ steps.set.outputs.auth }}
    steps:
      - name: Checkout full repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine base SHA
        id: base
        run: |
          echo "GITHUB_EVENT_NAME=$GITHUB_EVENT_NAME"
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            BASE_SHA=$(jq -r .pull_request.base.sha < "$GITHUB_EVENT_PATH")
          else
            BASE_SHA=${{ github.event.before }}
          fi
          echo "base_sha=$BASE_SHA" >> $GITHUB_OUTPUT

      - name: Compute changed files
        id: changes
        run: |
          # ensure refs present
          git fetch --no-tags --prune --depth=1 origin main || true
          BASE_SHA=${{ steps.base.outputs.base_sha }}
          echo "Using base: $BASE_SHA"
          if [ -z "$BASE_SHA" ] || [ "$BASE_SHA" = "0000000000000000000000000000000000000000" ]; then
            CHANGED=$(git ls-files)
          else
            CHANGED=$(git diff --name-only $BASE_SHA $GITHUB_SHA || git diff --name-only $BASE_SHA)
          fi
          echo "$CHANGED" > changed_files.txt
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Set flags for apps
        id: set
        run: |
          CHANGED=$(cat changed_files.txt || true)
          WEB=false
          AUTH=false
          echo "$CHANGED" | grep -q '^apps/web/' && WEB=true || true
          echo "$CHANGED" | grep -q '^apps/auth-service/' && AUTH=true || true
          echo "web=$WEB" >> $GITHUB_OUTPUT
          echo "auth=$AUTH" >> $GITHUB_OUTPUT

  build-web:
    name: Build web (only if changed)
    needs: detect
    if: needs.detect.outputs.web == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node and pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.1.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies (root)
        run: pnpm install --frozen-lockfile

      - name: Build web
        working-directory: ./apps/web
        run: |
          # adapt if your web app build script differs
          pnpm --filter ./apps/web... run build || pnpm run build

      - name: Docker build & push (optional)
        if: env.DOCKER_REGISTRY != ''
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "Docker push placeholder - add your registry steps here"

  build-auth:
    name: Build auth-service (only if changed)
    needs: detect
    if: needs.detect.outputs.auth == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node and pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.1.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies (root)
        run: pnpm install --frozen-lockfile

      - name: Build auth-service
        working-directory: ./apps/auth-service
        run: |
          # adjust to your service build or docker pipeline
          pnpm --filter ./apps/auth-service... run build || pnpm run build

      - name: Docker build & push (optional)
        if: env.DOCKER_REGISTRY != ''
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "Docker push placeholder - add your registry steps here"
